name: Continuous Delivery

on:
  push:
    branches:
      - main
env:
  IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}"
  REPOSITORY: yugabytedb-postgis


jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - version: 2.18.2.1
            build: b1
            arm-suffix: el8-aarch64
            x86-suffix: linux-x86_64
    steps:
      - name: Check if image exists
        id: check_image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
                    
          echo "Checking if image https://ghcr.io/v2/${{ github.repository_owner }}/$REPOSITORY/manifests/${{ matrix.version }}-${{ matrix.build }} exists"
          
          if `curl --head --silent -f -lSL -H "Authorization: Bearer $GITHUB_TOKEN" https://ghcr.io/v2/${{ github.repository_owner }}/$REPOSITORY/manifests/${{ matrix.version }}-${{ matrix.build }} > /dev/null`; then
            echo "image exist"
            echo "image_exist=true" >> $GITHUB_OUTPUT
          else
            echo "image not exist
            echo "image_exist=false" >> $GITHUB_OUTPUT
          fi
      - name: Checkout Code
        uses: actions/checkout@v3
        if: steps.check_image.outputs.image_exist == 'false'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.check_image.outputs.image_exist == 'false'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.check_image.outputs.image_exist == 'false'
      - name: Log in to the GitHub Container registry
        if: steps.check_image.outputs.image_exist == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.check_image.outputs.image_exist == 'false'
        run: |
          chmod +x build_docker.sh
          ./build_docker.sh -r ${{ env.IMAGE_REPO }} -a https://downloads.yugabyte.com/releases/${{ matrix.version }}/yugabyte-${{ matrix.version }}-${{ matrix.build }}-${{ matrix.arm-suffix }}.tar.gz -x https://downloads.yugabyte.com/releases/${{ matrix.version }}/yugabyte-${{ matrix.version }}-${{ matrix.build }}-${{ matrix.x86-suffix }}.tar.gz
